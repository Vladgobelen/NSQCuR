name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              build-essential \
              libssl-dev \
              pkg-config \
              imagemagick

      - name: Create Resources Directory
        run: mkdir -p resources

      - name: Generate Icon
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          if [ -f "resources/emblem.png" ]; then
            convert -background none \
              -define icon:auto-resize=256,64,32 \
              resources/emblem.png \
              resources/emblem.ico
          else
            echo "‚ö†Ô∏è Warning: emblem.png not found, using default icon"
          fi

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rust-src, clippy, rustfmt

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked
        env:
          RUSTFLAGS: -D warnings

      - name: Verify Artifacts
        run: |
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
          if [ -f "target/release/nightwatch-updater" ]; then
            echo "‚úÖ Build successful"
            file target/release/nightwatch-updater
          else
            echo "‚ùå Build failed: executable not found"
            exit 1
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∫–æ–Ω–∫–∏
          if [ -f "resources/emblem.ico" ]; then
            echo "üîç Icon info:"
            identify resources/emblem.ico
          fi

      - name: Upload Artifacts
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: release-binaries
          path: |
            target/release/nightwatch-updater*
            resources/emblem.ico
