name: Rust CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Check code format
        run: cargo fmt -- --check
      
      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --all-features --release

  build:
    name: Build Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Build Release
        run: cargo build --release
      
      - name: Upload Artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: target/release/nightwatch-updater.exe

      - name: Upload Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: target/release/nightwatch-updater

      - name: Upload Artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: target/release/nightwatch-updater
